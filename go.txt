

#helloworld.go###############################
package main
import "fmt"
func main() {
	fmt.Println("hello,world!")
}


fmt包	包括接收输入，格式化输出的各种函数
	Println
	gofmt	将代码格式化为标准格式
	goimports	自动添加需要用import声明及需要移除的import声明
	Printf	格式化输出
		%d	int变量
		%x,%o,%b 	16进制，8进制，2进制形式的int
		$f,%g,%e	浮点数
		%t 	布尔数
		%c	rune，go中特有的unicode字符类型
		%s 	string
		%q	带双引号的字符串或带单引号的rune 'c'
		%v 	将任意变量以易读的形式打印
		%%	字符型百分比标识(%符号本身)


os包		提供与系统交换相关的一些函数及变量
	Args	获取运行时程序的命令行参数
		os.Args(0)	命令行执行的命令本身
		os.Args[1:len(os.Args)]	除了命令本身外的所有参数
		os.Args[1:]	同上

#同linux的#?  ##################################
package main

import (
	"fmt"
	"os"
)

func main() {
	var s,sep string
	for i := 1; i < len(os.Args); i++ {
		s +=sep + os.Args[i]
		sep=" "		
		}	
	fmt.Println(s)
}

与上同
fmt.Println(strings.Join(os.Args[1:]," "))

_(下划线)	空白标识符,可以在任何接收值但不需要处理时使用


以下写法等价
s := ""				只能用在函数内部,package级别的变量禁止使用
var s string		用作初始化
var s = ""			较少使用,除非同时声明多个变量
var s string = ""	


bufio	用于处理程序的输出和输入
	Scanner	可以简单的接收输入,或把输入打散成行或单词




var			声明变量
const		声明常量
type 		类型
func 		声明函数






